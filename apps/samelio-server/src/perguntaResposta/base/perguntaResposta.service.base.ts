/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PerguntaResposta as PrismaPerguntaResposta,
} from "@prisma/client";

export class PerguntaRespostaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PerguntaRespostaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.perguntaResposta.count(args);
  }

  async perguntaRespostas(
    args: Prisma.PerguntaRespostaFindManyArgs
  ): Promise<PrismaPerguntaResposta[]> {
    return this.prisma.perguntaResposta.findMany(args);
  }
  async perguntaResposta(
    args: Prisma.PerguntaRespostaFindUniqueArgs
  ): Promise<PrismaPerguntaResposta | null> {
    return this.prisma.perguntaResposta.findUnique(args);
  }
  async createPerguntaResposta(
    args: Prisma.PerguntaRespostaCreateArgs
  ): Promise<PrismaPerguntaResposta> {
    return this.prisma.perguntaResposta.create(args);
  }
  async updatePerguntaResposta(
    args: Prisma.PerguntaRespostaUpdateArgs
  ): Promise<PrismaPerguntaResposta> {
    return this.prisma.perguntaResposta.update(args);
  }
  async deletePerguntaResposta(
    args: Prisma.PerguntaRespostaDeleteArgs
  ): Promise<PrismaPerguntaResposta> {
    return this.prisma.perguntaResposta.delete(args);
  }
}
